:%d/123/d{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/lorae21/Projects/blob/main/spotify_song_popularity_model.pkl\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "id": "bK1lD_4R5aEU",
        "outputId": "648b2972-3421-41be-a125-3c73f064aa88"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-ca6f11c0-0966-466c-9fc0-e090c840c199\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-ca6f11c0-0966-466c-9fc0-e090c840c199\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Saving spotify_songs.csv to spotify_songs.csv\n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "\n",
        "\n",
        "uploaded = files.upload()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 550
        },
        "id": "eTaz9V0s5l3W",
        "outputId": "f8c414f6-bd2f-4f4f-feee-d39ac290864d"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-199e84ce-2089-4895-a0bd-a9155c052405\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>track_id</th>\n",
              "      <th>track_name</th>\n",
              "      <th>track_artist</th>\n",
              "      <th>track_popularity</th>\n",
              "      <th>track_album_id</th>\n",
              "      <th>track_album_name</th>\n",
              "      <th>track_album_release_date</th>\n",
              "      <th>playlist_name</th>\n",
              "      <th>playlist_id</th>\n",
              "      <th>playlist_genre</th>\n",
              "      <th>...</th>\n",
              "      <th>key</th>\n",
              "      <th>loudness</th>\n",
              "      <th>mode</th>\n",
              "      <th>speechiness</th>\n",
              "      <th>acousticness</th>\n",
              "      <th>instrumentalness</th>\n",
              "      <th>liveness</th>\n",
              "      <th>valence</th>\n",
              "      <th>tempo</th>\n",
              "      <th>duration_ms</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6f807x0ima9a1j3VPbc7VN</td>\n",
              "      <td>I Don't Care (with Justin Bieber) - Loud Luxur...</td>\n",
              "      <td>Ed Sheeran</td>\n",
              "      <td>66</td>\n",
              "      <td>2oCs0DGTsRO98Gh5ZSl2Cx</td>\n",
              "      <td>I Don't Care (with Justin Bieber) [Loud Luxury...</td>\n",
              "      <td>2019-06-14</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>pop</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>-2.634</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.1020</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0653</td>\n",
              "      <td>0.518</td>\n",
              "      <td>122.036</td>\n",
              "      <td>194754</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0r7CVbZTWZgbTCYdfa2P31</td>\n",
              "      <td>Memories - Dillon Francis Remix</td>\n",
              "      <td>Maroon 5</td>\n",
              "      <td>67</td>\n",
              "      <td>63rPSO264uRjW1X5E6cWv6</td>\n",
              "      <td>Memories (Dillon Francis Remix)</td>\n",
              "      <td>2019-12-13</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>pop</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>-4.969</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0373</td>\n",
              "      <td>0.0724</td>\n",
              "      <td>0.004210</td>\n",
              "      <td>0.3570</td>\n",
              "      <td>0.693</td>\n",
              "      <td>99.972</td>\n",
              "      <td>162600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1z1Hg7Vb0AhHDiEmnDE79l</td>\n",
              "      <td>All the Time - Don Diablo Remix</td>\n",
              "      <td>Zara Larsson</td>\n",
              "      <td>70</td>\n",
              "      <td>1HoSmj2eLcsrR0vE9gThr4</td>\n",
              "      <td>All the Time (Don Diablo Remix)</td>\n",
              "      <td>2019-07-05</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>pop</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.432</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0742</td>\n",
              "      <td>0.0794</td>\n",
              "      <td>0.000023</td>\n",
              "      <td>0.1100</td>\n",
              "      <td>0.613</td>\n",
              "      <td>124.008</td>\n",
              "      <td>176616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>75FpbthrwQmzHlBJLuGdC7</td>\n",
              "      <td>Call You Mine - Keanu Silva Remix</td>\n",
              "      <td>The Chainsmokers</td>\n",
              "      <td>60</td>\n",
              "      <td>1nqYsOef1yKKuGOVchbsk6</td>\n",
              "      <td>Call You Mine - The Remixes</td>\n",
              "      <td>2019-07-19</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>pop</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>-3.778</td>\n",
              "      <td>1</td>\n",
              "      <td>0.1020</td>\n",
              "      <td>0.0287</td>\n",
              "      <td>0.000009</td>\n",
              "      <td>0.2040</td>\n",
              "      <td>0.277</td>\n",
              "      <td>121.956</td>\n",
              "      <td>169093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1e8PAfcKUYoKkxPhrHqw4x</td>\n",
              "      <td>Someone You Loved - Future Humans Remix</td>\n",
              "      <td>Lewis Capaldi</td>\n",
              "      <td>69</td>\n",
              "      <td>7m7vv9wlQ4i0LFuJiE2zsQ</td>\n",
              "      <td>Someone You Loved (Future Humans Remix)</td>\n",
              "      <td>2019-03-05</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>pop</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.672</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0359</td>\n",
              "      <td>0.0803</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0833</td>\n",
              "      <td>0.725</td>\n",
              "      <td>123.976</td>\n",
              "      <td>189052</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-199e84ce-2089-4895-a0bd-a9155c052405')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-199e84ce-2089-4895-a0bd-a9155c052405 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-199e84ce-2089-4895-a0bd-a9155c052405');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7daf1f23-9863-4977-8754-d7ca7acc0b86\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7daf1f23-9863-4977-8754-d7ca7acc0b86')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7daf1f23-9863-4977-8754-d7ca7acc0b86 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "                 track_id                                         track_name  \\\n",
              "0  6f807x0ima9a1j3VPbc7VN  I Don't Care (with Justin Bieber) - Loud Luxur...   \n",
              "1  0r7CVbZTWZgbTCYdfa2P31                    Memories - Dillon Francis Remix   \n",
              "2  1z1Hg7Vb0AhHDiEmnDE79l                    All the Time - Don Diablo Remix   \n",
              "3  75FpbthrwQmzHlBJLuGdC7                  Call You Mine - Keanu Silva Remix   \n",
              "4  1e8PAfcKUYoKkxPhrHqw4x            Someone You Loved - Future Humans Remix   \n",
              "\n",
              "       track_artist  track_popularity          track_album_id  \\\n",
              "0        Ed Sheeran                66  2oCs0DGTsRO98Gh5ZSl2Cx   \n",
              "1          Maroon 5                67  63rPSO264uRjW1X5E6cWv6   \n",
              "2      Zara Larsson                70  1HoSmj2eLcsrR0vE9gThr4   \n",
              "3  The Chainsmokers                60  1nqYsOef1yKKuGOVchbsk6   \n",
              "4     Lewis Capaldi                69  7m7vv9wlQ4i0LFuJiE2zsQ   \n",
              "\n",
              "                                    track_album_name track_album_release_date  \\\n",
              "0  I Don't Care (with Justin Bieber) [Loud Luxury...               2019-06-14   \n",
              "1                    Memories (Dillon Francis Remix)               2019-12-13   \n",
              "2                    All the Time (Don Diablo Remix)               2019-07-05   \n",
              "3                        Call You Mine - The Remixes               2019-07-19   \n",
              "4            Someone You Loved (Future Humans Remix)               2019-03-05   \n",
              "\n",
              "  playlist_name             playlist_id playlist_genre  ... key  loudness  \\\n",
              "0     Pop Remix  37i9dQZF1DXcZDD7cfEKhW            pop  ...   6    -2.634   \n",
              "1     Pop Remix  37i9dQZF1DXcZDD7cfEKhW            pop  ...  11    -4.969   \n",
              "2     Pop Remix  37i9dQZF1DXcZDD7cfEKhW            pop  ...   1    -3.432   \n",
              "3     Pop Remix  37i9dQZF1DXcZDD7cfEKhW            pop  ...   7    -3.778   \n",
              "4     Pop Remix  37i9dQZF1DXcZDD7cfEKhW            pop  ...   1    -4.672   \n",
              "\n",
              "   mode  speechiness  acousticness  instrumentalness  liveness  valence  \\\n",
              "0     1       0.0583        0.1020          0.000000    0.0653    0.518   \n",
              "1     1       0.0373        0.0724          0.004210    0.3570    0.693   \n",
              "2     0       0.0742        0.0794          0.000023    0.1100    0.613   \n",
              "3     1       0.1020        0.0287          0.000009    0.2040    0.277   \n",
              "4     1       0.0359        0.0803          0.000000    0.0833    0.725   \n",
              "\n",
              "     tempo  duration_ms  \n",
              "0  122.036       194754  \n",
              "1   99.972       162600  \n",
              "2  124.008       176616  \n",
              "3  121.956       169093  \n",
              "4  123.976       189052  \n",
              "\n",
              "[5 rows x 23 columns]"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VFhh0LnS6NW_",
        "outputId": "f1428cab-825a-4f83-8e92-176ab4a4dcd0"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 32833 entries, 0 to 32832\n",
            "Data columns (total 23 columns):\n",
            " #   Column                    Non-Null Count  Dtype  \n",
            "---  ------                    --------------  -----  \n",
            " 0   track_id                  32833 non-null  object \n",
            " 1   track_name                32828 non-null  object \n",
            " 2   track_artist              32828 non-null  object \n",
            " 3   track_popularity          32833 non-null  int64  \n",
            " 4   track_album_id            32833 non-null  object \n",
            " 5   track_album_name          32828 non-null  object \n",
            " 6   track_album_release_date  32833 non-null  object \n",
            " 7   playlist_name             32833 non-null  object \n",
            " 8   playlist_id               32833 non-null  object \n",
            " 9   playlist_genre            32833 non-null  object \n",
            " 10  playlist_subgenre         32833 non-null  object \n",
            " 11  danceability              32833 non-null  float64\n",
            " 12  energy                    32833 non-null  float64\n",
            " 13  key                       32833 non-null  int64  \n",
            " 14  loudness                  32833 non-null  float64\n",
            " 15  mode                      32833 non-null  int64  \n",
            " 16  speechiness               32833 non-null  float64\n",
            " 17  acousticness              32833 non-null  float64\n",
            " 18  instrumentalness          32833 non-null  float64\n",
            " 19  liveness                  32833 non-null  float64\n",
            " 20  valence                   32833 non-null  float64\n",
            " 21  tempo                     32833 non-null  float64\n",
            " 22  duration_ms               32833 non-null  int64  \n",
            "dtypes: float64(9), int64(4), object(10)\n",
            "memory usage: 5.8+ MB\n"
          ]
        }
      ],
      "source": [
        "data.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 550
        },
        "id": "3TAa4uzB6Upl",
        "outputId": "f44ab5a9-8387-4ec3-c8a8-0254e2f52b93"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-4d41acbf-1df9-4e07-8f30-3361972354ae\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>track_id</th>\n",
              "      <th>track_name</th>\n",
              "      <th>track_artist</th>\n",
              "      <th>track_popularity</th>\n",
              "      <th>track_album_id</th>\n",
              "      <th>track_album_name</th>\n",
              "      <th>track_album_release_date</th>\n",
              "      <th>playlist_name</th>\n",
              "      <th>playlist_id</th>\n",
              "      <th>danceability</th>\n",
              "      <th>...</th>\n",
              "      <th>key</th>\n",
              "      <th>loudness</th>\n",
              "      <th>mode</th>\n",
              "      <th>speechiness</th>\n",
              "      <th>acousticness</th>\n",
              "      <th>instrumentalness</th>\n",
              "      <th>liveness</th>\n",
              "      <th>valence</th>\n",
              "      <th>tempo</th>\n",
              "      <th>duration_ms</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6f807x0ima9a1j3VPbc7VN</td>\n",
              "      <td>I Don't Care (with Justin Bieber) - Loud Luxur...</td>\n",
              "      <td>Ed Sheeran</td>\n",
              "      <td>66</td>\n",
              "      <td>2oCs0DGTsRO98Gh5ZSl2Cx</td>\n",
              "      <td>I Don't Care (with Justin Bieber) [Loud Luxury...</td>\n",
              "      <td>2019-06-14</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>0.748</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>-2.634</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.1020</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0653</td>\n",
              "      <td>0.518</td>\n",
              "      <td>122.036</td>\n",
              "      <td>194754</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0r7CVbZTWZgbTCYdfa2P31</td>\n",
              "      <td>Memories - Dillon Francis Remix</td>\n",
              "      <td>Maroon 5</td>\n",
              "      <td>67</td>\n",
              "      <td>63rPSO264uRjW1X5E6cWv6</td>\n",
              "      <td>Memories (Dillon Francis Remix)</td>\n",
              "      <td>2019-12-13</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>0.726</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>-4.969</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0373</td>\n",
              "      <td>0.0724</td>\n",
              "      <td>0.004210</td>\n",
              "      <td>0.3570</td>\n",
              "      <td>0.693</td>\n",
              "      <td>99.972</td>\n",
              "      <td>162600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1z1Hg7Vb0AhHDiEmnDE79l</td>\n",
              "      <td>All the Time - Don Diablo Remix</td>\n",
              "      <td>Zara Larsson</td>\n",
              "      <td>70</td>\n",
              "      <td>1HoSmj2eLcsrR0vE9gThr4</td>\n",
              "      <td>All the Time (Don Diablo Remix)</td>\n",
              "      <td>2019-07-05</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>0.675</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.432</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0742</td>\n",
              "      <td>0.0794</td>\n",
              "      <td>0.000023</td>\n",
              "      <td>0.1100</td>\n",
              "      <td>0.613</td>\n",
              "      <td>124.008</td>\n",
              "      <td>176616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>75FpbthrwQmzHlBJLuGdC7</td>\n",
              "      <td>Call You Mine - Keanu Silva Remix</td>\n",
              "      <td>The Chainsmokers</td>\n",
              "      <td>60</td>\n",
              "      <td>1nqYsOef1yKKuGOVchbsk6</td>\n",
              "      <td>Call You Mine - The Remixes</td>\n",
              "      <td>2019-07-19</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>0.718</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>-3.778</td>\n",
              "      <td>1</td>\n",
              "      <td>0.1020</td>\n",
              "      <td>0.0287</td>\n",
              "      <td>0.000009</td>\n",
              "      <td>0.2040</td>\n",
              "      <td>0.277</td>\n",
              "      <td>121.956</td>\n",
              "      <td>169093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1e8PAfcKUYoKkxPhrHqw4x</td>\n",
              "      <td>Someone You Loved - Future Humans Remix</td>\n",
              "      <td>Lewis Capaldi</td>\n",
              "      <td>69</td>\n",
              "      <td>7m7vv9wlQ4i0LFuJiE2zsQ</td>\n",
              "      <td>Someone You Loved (Future Humans Remix)</td>\n",
              "      <td>2019-03-05</td>\n",
              "      <td>Pop Remix</td>\n",
              "      <td>37i9dQZF1DXcZDD7cfEKhW</td>\n",
              "      <td>0.650</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.672</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0359</td>\n",
              "      <td>0.0803</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0833</td>\n",
              "      <td>0.725</td>\n",
              "      <td>123.976</td>\n",
              "      <td>189052</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d41acbf-1df9-4e07-8f30-3361972354ae')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4d41acbf-1df9-4e07-8f30-3361972354ae button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4d41acbf-1df9-4e07-8f30-3361972354ae');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bc76d3e3-0cc7-47b4-8fd2-49927043f4d3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc76d3e3-0cc7-47b4-8fd2-49927043f4d3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bc76d3e3-0cc7-47b4-8fd2-49927043f4d3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "                 track_id                                         track_name  \\\n",
              "0  6f807x0ima9a1j3VPbc7VN  I Don't Care (with Justin Bieber) - Loud Luxur...   \n",
              "1  0r7CVbZTWZgbTCYdfa2P31                    Memories - Dillon Francis Remix   \n",
              "2  1z1Hg7Vb0AhHDiEmnDE79l                    All the Time - Don Diablo Remix   \n",
              "3  75FpbthrwQmzHlBJLuGdC7                  Call You Mine - Keanu Silva Remix   \n",
              "4  1e8PAfcKUYoKkxPhrHqw4x            Someone You Loved - Future Humans Remix   \n",
              "\n",
              "       track_artist  track_popularity          track_album_id  \\\n",
              "0        Ed Sheeran                66  2oCs0DGTsRO98Gh5ZSl2Cx   \n",
              "1          Maroon 5                67  63rPSO264uRjW1X5E6cWv6   \n",
              "2      Zara Larsson                70  1HoSmj2eLcsrR0vE9gThr4   \n",
              "3  The Chainsmokers                60  1nqYsOef1yKKuGOVchbsk6   \n",
              "4     Lewis Capaldi                69  7m7vv9wlQ4i0LFuJiE2zsQ   \n",
              "\n",
              "                                    track_album_name track_album_release_date  \\\n",
              "0  I Don't Care (with Justin Bieber) [Loud Luxury...               2019-06-14   \n",
              "1                    Memories (Dillon Francis Remix)               2019-12-13   \n",
              "2                    All the Time (Don Diablo Remix)               2019-07-05   \n",
              "3                        Call You Mine - The Remixes               2019-07-19   \n",
              "4            Someone You Loved (Future Humans Remix)               2019-03-05   \n",
              "\n",
              "  playlist_name             playlist_id  danceability  ...  key  loudness  \\\n",
              "0     Pop Remix  37i9dQZF1DXcZDD7cfEKhW         0.748  ...    6    -2.634   \n",
              "1     Pop Remix  37i9dQZF1DXcZDD7cfEKhW         0.726  ...   11    -4.969   \n",
              "2     Pop Remix  37i9dQZF1DXcZDD7cfEKhW         0.675  ...    1    -3.432   \n",
              "3     Pop Remix  37i9dQZF1DXcZDD7cfEKhW         0.718  ...    7    -3.778   \n",
              "4     Pop Remix  37i9dQZF1DXcZDD7cfEKhW         0.650  ...    1    -4.672   \n",
              "\n",
              "   mode  speechiness  acousticness  instrumentalness  liveness  valence  \\\n",
              "0     1       0.0583        0.1020          0.000000    0.0653    0.518   \n",
              "1     1       0.0373        0.0724          0.004210    0.3570    0.693   \n",
              "2     0       0.0742        0.0794          0.000023    0.1100    0.613   \n",
              "3     1       0.1020        0.0287          0.000009    0.2040    0.277   \n",
              "4     1       0.0359        0.0803          0.000000    0.0833    0.725   \n",
              "\n",
              "     tempo  duration_ms  \n",
              "0  122.036       194754  \n",
              "1   99.972       162600  \n",
              "2  124.008       176616  \n",
              "3  121.956       169093  \n",
              "4  123.976       189052  \n",
              "\n",
              "[5 rows x 21 columns]"
            ]
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data = data.drop(['playlist_subgenre', 'playlist_genre'],  axis=1)\n",
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "AUsWtOwM6Urn",
        "outputId": "e70854c5-5175-4700-daa3-b1dbeac2087e"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-7dcf236a-8a78-4df0-8feb-d8edd2a6373f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>track_popularity</th>\n",
              "      <th>danceability</th>\n",
              "      <th>energy</th>\n",
              "      <th>key</th>\n",
              "      <th>loudness</th>\n",
              "      <th>mode</th>\n",
              "      <th>speechiness</th>\n",
              "      <th>acousticness</th>\n",
              "      <th>instrumentalness</th>\n",
              "      <th>liveness</th>\n",
              "      <th>valence</th>\n",
              "      <th>tempo</th>\n",
              "      <th>duration_ms</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "      <td>32833.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>42.477081</td>\n",
              "      <td>0.654850</td>\n",
              "      <td>0.698619</td>\n",
              "      <td>5.374471</td>\n",
              "      <td>-6.719499</td>\n",
              "      <td>0.565711</td>\n",
              "      <td>0.107068</td>\n",
              "      <td>0.175334</td>\n",
              "      <td>0.084747</td>\n",
              "      <td>0.190176</td>\n",
              "      <td>0.510561</td>\n",
              "      <td>120.881132</td>\n",
              "      <td>225799.811622</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>24.984074</td>\n",
              "      <td>0.145085</td>\n",
              "      <td>0.180910</td>\n",
              "      <td>3.611657</td>\n",
              "      <td>2.988436</td>\n",
              "      <td>0.495671</td>\n",
              "      <td>0.101314</td>\n",
              "      <td>0.219633</td>\n",
              "      <td>0.224230</td>\n",
              "      <td>0.154317</td>\n",
              "      <td>0.233146</td>\n",
              "      <td>26.903624</td>\n",
              "      <td>59834.006182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000175</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-46.448000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>24.000000</td>\n",
              "      <td>0.563000</td>\n",
              "      <td>0.581000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>-8.171000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.041000</td>\n",
              "      <td>0.015100</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.092700</td>\n",
              "      <td>0.331000</td>\n",
              "      <td>99.960000</td>\n",
              "      <td>187819.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>45.000000</td>\n",
              "      <td>0.672000</td>\n",
              "      <td>0.721000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>-6.166000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.062500</td>\n",
              "      <td>0.080400</td>\n",
              "      <td>0.000016</td>\n",
              "      <td>0.127000</td>\n",
              "      <td>0.512000</td>\n",
              "      <td>121.984000</td>\n",
              "      <td>216000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>62.000000</td>\n",
              "      <td>0.761000</td>\n",
              "      <td>0.840000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>-4.645000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.132000</td>\n",
              "      <td>0.255000</td>\n",
              "      <td>0.004830</td>\n",
              "      <td>0.248000</td>\n",
              "      <td>0.693000</td>\n",
              "      <td>133.918000</td>\n",
              "      <td>253585.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>100.000000</td>\n",
              "      <td>0.983000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>1.275000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.918000</td>\n",
              "      <td>0.994000</td>\n",
              "      <td>0.994000</td>\n",
              "      <td>0.996000</td>\n",
              "      <td>0.991000</td>\n",
              "      <td>239.440000</td>\n",
              "      <td>517810.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7dcf236a-8a78-4df0-8feb-d8edd2a6373f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7dcf236a-8a78-4df0-8feb-d8edd2a6373f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7dcf236a-8a78-4df0-8feb-d8edd2a6373f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-316fba7b-667d-473a-b298-2300267cfea0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-316fba7b-667d-473a-b298-2300267cfea0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-316fba7b-667d-473a-b298-2300267cfea0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "       track_popularity  danceability        energy           key  \\\n",
              "count      32833.000000  32833.000000  32833.000000  32833.000000   \n",
              "mean          42.477081      0.654850      0.698619      5.374471   \n",
              "std           24.984074      0.145085      0.180910      3.611657   \n",
              "min            0.000000      0.000000      0.000175      0.000000   \n",
              "25%           24.000000      0.563000      0.581000      2.000000   \n",
              "50%           45.000000      0.672000      0.721000      6.000000   \n",
              "75%           62.000000      0.761000      0.840000      9.000000   \n",
              "max          100.000000      0.983000      1.000000     11.000000   \n",
              "\n",
              "           loudness          mode   speechiness  acousticness  \\\n",
              "count  32833.000000  32833.000000  32833.000000  32833.000000   \n",
              "mean      -6.719499      0.565711      0.107068      0.175334   \n",
              "std        2.988436      0.495671      0.101314      0.219633   \n",
              "min      -46.448000      0.000000      0.000000      0.000000   \n",
              "25%       -8.171000      0.000000      0.041000      0.015100   \n",
              "50%       -6.166000      1.000000      0.062500      0.080400   \n",
              "75%       -4.645000      1.000000      0.132000      0.255000   \n",
              "max        1.275000      1.000000      0.918000      0.994000   \n",
              "\n",
              "       instrumentalness      liveness       valence         tempo  \\\n",
              "count      32833.000000  32833.000000  32833.000000  32833.000000   \n",
              "mean           0.084747      0.190176      0.510561    120.881132   \n",
              "std            0.224230      0.154317      0.233146     26.903624   \n",
              "min            0.000000      0.000000      0.000000      0.000000   \n",
              "25%            0.000000      0.092700      0.331000     99.960000   \n",
              "50%            0.000016      0.127000      0.512000    121.984000   \n",
              "75%            0.004830      0.248000      0.693000    133.918000   \n",
              "max            0.994000      0.996000      0.991000    239.440000   \n",
              "\n",
              "         duration_ms  \n",
              "count   32833.000000  \n",
              "mean   225799.811622  \n",
              "std     59834.006182  \n",
              "min      4000.000000  \n",
              "25%    187819.000000  \n",
              "50%    216000.000000  \n",
              "75%    253585.000000  \n",
              "max    517810.000000  "
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yfgolBDI_HD5"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uDKmCzso_LIS",
        "outputId": "02ea296c-1eef-49d9-97b9-62e3040c9b43"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "track_id                    0\n",
              "track_name                  5\n",
              "track_artist                5\n",
              "track_popularity            0\n",
              "track_album_id              0\n",
              "track_album_name            5\n",
              "track_album_release_date    0\n",
              "playlist_name               0\n",
              "playlist_id                 0\n",
              "danceability                0\n",
              "energy                      0\n",
              "key                         0\n",
              "loudness                    0\n",
              "mode                        0\n",
              "speechiness                 0\n",
              "acousticness                0\n",
              "instrumentalness            0\n",
              "liveness                    0\n",
              "valence                     0\n",
              "tempo                       0\n",
              "duration_ms                 0\n",
              "dtype: int64"
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.describe()\n",
        "data.isnull().sum()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "iREEVD1j_inj"
      },
      "outputs": [],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the CSV data into a DataFrame\n",
        "data = pd.read_csv(\"spotify_songs.csv\")\n",
        "\n",
        "# Create a scatterplot\n",
        "sns.scatterplot(\n",
        "    x=\"danceability\",\n",
        "    y=\"track_popularity\",\n",
        "    hue=\"playlist_genre\",\n",
        "    data=data,\n",
        ")\n",
        "\n",
        "# Add a title and labels\n",
        "plt.title(\"Danceability vs. Track Popularity\")\n",
        "plt.xlabel(\"Danceability\")\n",
        "plt.ylabel(\"Track Popularity\")\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n",
        "\n",
        "numerical_features = [\n",
        "    \"danceability\",\n",
        "    \"energy\",\n",
        "    \"speechiness\",\n",
        "    \"acousticness\",\n",
        "    \"instrumentalness\",\n",
        "    \"liveness\",\n",
        "    \"valence\",\n",
        "    \"tempo\",\n",
        "    \"duration_ms\",\n",
        "]\n",
        "\n",
        "for feature in numerical_features:\n",
        "    sns.scatterplot(\n",
        "        x=feature,\n",
        "        y=\"track_popularity\",\n",
        "        hue=\"playlist_genre\",\n",
        "        data=data,\n",
        "    )\n",
        "    plt.title(f\"{feature} vs. Track Popularity\")\n",
        "    plt.xlabel(feature)\n",
        "    plt.ylabel(\"Track Popularity\")\n",
        "    plt.show()\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "UQVazC0JAYqI",
        "outputId": "9ca5e657-3855-4e63-bef0-72ca872f3a01"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "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J6IgZjQasXXrVtxxxx1o0aIF/vvf/+L111/H8OHDMWjQIHG/I0eO4ODBg3jqqaeQlJTkULiSSEl5eXn45ptvsHPnTjzzzDONzsAjUhoTJ6Ig1rNnT0RERGD16tWorKwUB4wvX77cYb9t27Zh2bJluPbaa/H66687VKkmUtK4cePQokULTJ48uV4VfCI14hgnIiIiIok4xomIiIhIIiZORERERBJxjBMuL2Pw22+/oWXLlhyYSEREFCQEQcDvv/+Otm3berSGpC+YOAH47bffkJycrHQYRERE5IXTp0+jffv2AbkWEycALVu2BHD5hY+OjlY4GiIiIpKisrISycnJ4vd4IDBxwv9W7o6OjmbiREREFGQCOcyGg8OJiIiIJGLiRERERCQREyciIiIiiZg4EREREUnExImIiIhIIiZORERERBIxcSIiIiKSiIkTERERkURMnIiIiIgkYuJEREREJJGiidMnn3yCu+++G23btoVGo8E777zj8LggCFi0aBGSkpKg1+sxbNgw/PTTTw77lJaWYvz48YiOjkZMTAwmT56MqqqqAD4LIiIiaioUTZwuXryIXr164dlnn3X5+OrVq7Fu3Tps2LAB+/fvR/PmzZGamgqTySTuM378eHz33Xf44IMP8N577+GTTz7BtGnTAvUUiIiIqAnRCIIgKB0EcHmBvrfffhujRo0CcLm1qW3btvjzn/+MBQsWAAAqKirQunVrbN26FRkZGTh69Ci6deuGL7/8Ev379wcA7N69G3fccQfOnDmDtm3bSrp2ZWUlDAYDKioquMgvEclKEATxP3s6nS6gi5EShTolvr9VO8bpl19+QVFREYYNGyZuMxgMGDhwIAoKCgAABQUFiImJEZMmABg2bBjCwsKwf/9+t+c2m82orKx0uBER+YPJZEJaWhrS0tIcWsuJKDipNnEqKioCALRu3dphe+vWrcXHioqKkJiY6PB4REQE4uLixH1cWblyJQwGg3hLTk6WOXoiIiIKRapNnPxp4cKFqKioEG+nT59WOiQiamIEQUBNTQ3KyspQVlYGq9WqdEhEJEGE0gG406ZNGwBAcXExkpKSxO3FxcXo3bu3uE9JSYnDcXV1dSgtLRWPd0Wr1UKr1cofNBGRRLYuPBuj0YjY2FgFIyIiKVTb4tSpUye0adMGe/bsEbdVVlZi//79SElJAQCkpKSgvLwc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IiIiIomYOBERERFJxMSJiIiISCImTkREREQSMXEiIiIikihC6QDUwFY8vbKyUuFIiIiISCrb93YgF0Fh4gTgt99+AwAkJycrHAkRERF56vfffw/YOo3sqgPQvHlzpUMgIiIiL3zxxRdo27ZtwK7HxAlAWBhfBiIiomCUlJQU0O9xZgxEREREEjFxIiIiIpKIg8MBREdHY9CgQbBarRg4cCD2798Pq9Xa6HFhYWEe7e/NMWq8hhpjCsQ11BhTIK6hxpgCcQ01xhSIa6gxpkBcQ40xBeIaaozJk2MiIiIQHR0t6Zxy0QiBnMNHREREFMTYVUdEREQkERMnIiIiIomYOBERERFJxMSJiIiISCpBZdavXy906NBB0Gq1woABA4T9+/e73HbvvfcKAHjjjTfeeOONN968vj300EMe5SmqSpzy8vKEyMhIYfPmzcJ3330nTJ06VYiKiqq3LTIyUvEXmjfeeOONN954C45bRESEw/2wsDChZ8+eAgAhLi5OqKqqkpyrqCpxGjBggDBr1izxvsViEZo1aybccMMNDts0Go3Dk3d+QXjjjTfeeOONN95st2bNmtXbduONNwotWrQQoqKihE2bNknOVVQzxqm2thYHDx7EsGHDxG11dXWoq6uDxWIRt1VXV0OwKz1ltVpRV1cX0FiJiIgoeFy6dKnetoKCAtTV1aF58+b473//K/lcqkmczp8/D4vFgtatWztsEwQBVVVV4rYff/xRifCIiIgohAiCgOuvvx7nzp1DYWGh5ONUkzgRERERBdJ//vMfXH/99QgLk54OqSZxSkhIQHh4OIqLix22aTQatGjRQtx2zTXXKBEeERERhZiWLVvixx9/ROfOnSUfo5rEKTIyEv369cOePXvEbREREeLNJioqChqNBhqNBsDlhQDtHyciIiJyR6vVii1MWq0WFRUVSEtLk3y8qjKO+fPnIzMzE/3798eAAQOwdu1aNGvWDIcOHUJubi7eeustnDp1Cs2aNUNtbS2Ay4PDpa62TERERE2b2WwWfz5//jx69+6N4cOHSz+BfMUE5JGTkyNcccUVQmRkpDBgwADh888/F7dpNBohISFB+Pzzz4WxY8cqPr2RN95444033ngLzltYWJgwbNgwwWQyeZSnaATBbm4/EREREbmlmjFORERERGrHxImIiIhIIiZORERERBIxcSIiIiKSiIkTERERkURMnIiIiIgkYuJEREREJBETJyIiIiKJmDgRERERScTEiYiarEuXLikdAhEFGSZORKQKVqsVK1euRKdOnaDX69GrVy9s27YNALBv3z5oNBrs2bMH/fv3R1RUFG688UYcO3bM4Rz5+fno27cvdDodOnfujKVLl6Kurk58XKPR4Pnnn8fIkSPRvHlzrFixAgCwfPlyJCYmomXLlpgyZQr++te/onfv3gCATz75BM2aNUNRUZHDtebNm4ebb77Zj68IEamSX1bqJSLy0PLly4UuXboIu3fvFo4fPy5s2bJF0Gq1wr59+4S9e/cKAISBAwcK+/btE7777jvh5ptvFm688Ubx+E8++USIjo4Wtm7dKhw/flz497//LXTs2FFYsmSJuA8AITExUdi8ebNw/Phx4ddffxVeeeUVQafTCZs3bxaOHTsmLF26VIiOjhZ69eolHnfNNdcIq1evFu/X1tYKCQkJwubNmwPy2hCRejBxIiLFmUwmISoqSvjss88ctk+ePFkYN26cmDh9+OGH4mM7d+4UAAg1NTWCIAjC0KFDhccff9zh+H/+859CUlKSeB+AMG/ePId9Bg4cKMyaNcth26BBgxwSp1WrVgldu3YV72/fvl1o0aKFUFVV5d0TJqKgxa46IlLczz//jOrqatx+++1o0aKFeHv55Zdx/Phxcb+ePXuKPyclJQEASkpKAABff/01li1b5nD81KlTUVhYiOrqavG4/v37O1z72LFjGDBggMM25/tZWVn4+eef8fnnnwMAtm7divvuuw/NmzeX4dkTUTCJUDoAIqKqqioAwM6dO9GuXTuHx7RarZg8NWvWTNyu0WgAXB4bZTvH0qVLMXr06Hrn1+l04s/eJDuJiYm4++67sWXLFnTq1Am7du3Cvn37PD4PEQU/Jk5EpLhu3bpBq9Xi1KlTGDx4cL3H7Vud3Onbty+OHTuGq666yqNrX3vttfjyyy8xceJEcduXX35Zb78pU6Zg3LhxaN++Pa688koMGjTIo+sQUWhg4kREimvZsiUWLFiABx98EFarFTfddBMqKirw6aefIjo6Gh06dGj0HIsWLcJdd92FK664AmPHjkVYWBi+/vprHDlyBMuXL3d7XHZ2NqZOnYr+/fvjxhtvhNFoxDfffIPOnTs77Jeamoro6GgsX74cy5Yt8/k5E1Fw4hgnIlKFxx57DI8++ihWrlyJrl27YsSIEdi5cyc6deok6fjU1FS89957+Pe//43rr78eN9xwA9asWdNo0jV+/HgsXLgQCxYsQN++ffHLL78gKyvLoXsPAMLCwpCVlQWLxeLQOkVETYtGEARB6SCIiNTk9ttvR5s2bfDPf/7TYfvkyZNx7tw57NixQ6HIiEhp7KojoiaturoaGzZsQGpqKsLDw/H666/jww8/xAcffCDuU1FRgW+//RavvfYakyaiJo6JExE1aRqNBv/617+wYsUKmEwmXHvttdi+fTuGDRsm7pOWloYvvvgCM2bMwO23365gtESkNHbVEREREUnEweFEREREEjFxIiIiIpKIiRMRERGRREyciIiIiCRi4kREREQkERMnIiIiIomYOBERERFJxMSJiIiISCImTkREREQS/R/3vb7cDTHbqQAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "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cnKESy+9VKisrGyx3Y7X/6OPPhKOHTsmHDx4UFi7dq2Qnp4uJCYmCocOHRK+++47AYAwfvx4l8dOnz5dACB8/PHH4rZOnToJAIQ33nhD3FZTUyNkZ2cLvXv3btZmb+1xvo6DBg0SBg0aJN5ubGwUbDaby+OqqqqEzMxMYdy4ceK2ffv2CQCElJQUoaKiwmV/x30rV64Ut02aNMljm3755RcBgPDss8+6bL/pppuEzp07u7wWRGpi2o7IC5PJhIqKCnz66afittdffx12ux0mk0nclpiYKP5utVpx/Phx/PnPfwYAfPvtt16Pv2nTJlRXV2PUqFE4fvy4+BMbG4v+/fs3S40AwMSJE11uX3nllfj999/F22+88QZ0Oh1mzZrV7LGOHrD169fDbrdj5MiRLufNyspCt27dPJ5X6nVJTExEQkICPv30U1RVVfk8npyce+AcnF+f06dP4/jx47jssssgCAJ27twJADh27Bg+++wzjBs3Dh07dnR5vKeew127dmHQoEHo3LkzPvroI7Rp08bvNg4ZMgTt2rVDbm4uCgoKkJSUhA0bNqB9+/Z47733AAD333+/y2MeeOABAMC7777rsj0nJwc333yzeDslJQV33HEHdu7cibKyMr/b5E1sbCwSEhIAnE0HV1ZWorGxEZdcconH9/aIESPQrl27gM933nnnoX///lizZo24rbKyEu+//z5Gjx7tsxeXKJSYtiPy4tprr4XRaITFYsHgwYMBnE1N9erVC+edd564X2VlJWbPno21a9eioqLC5Rg1NTVej//bb78B+N+YF3cpKSkutx3jl5y1adPGJTjZu3cvcnJyXFIens4rCAK6devm8X7nWVGe+HNd9Ho9nnzySTzwwAPIzMzEn//8Z9xwww244447kJWV5fP4gYqLi0OHDh2abT9w4AAee+wxvPXWW80COcfr4whAHSnHltx4443IzMzEhx9+iKSkJEntXLZsGc477zzExcUhMzMT3bt3R0zM2f9j//jjD8TExODcc891eUxWVhZSU1Pxxx9/uGw/99xzmwUUjtdg//79slxrs9mMf//73/j555/R0NAgbu/SpUuzfT1tk+qOO+7A5MmT8ccff6BTp05Yt24dGhoacPvttwd9bCK5MHgi8kKv12P48OHYsGED/vOf/6C8vBxffPEF5s2b57LfyJEj8eWXX+LBBx9Er169kJSUBLvdjmuvvbbZeA9njvtefvllj19ycXGuf56xsbEyPKuz59XpdHj//fc9HrOlYMDf63LffffhxhtvxJtvvokPP/wQM2fOxPz58/Hxxx+jd+/esjwX93Y5ghCHpqYm/OUvf0FlZSUefvhh9OjRA61bt8bhw4cxduxYn6+PLyNGjIDZbMaaNWskD2Lu16+fOPbMGzl7WLwdy32igSerV6/G2LFjMXz4cDz44IPIyMhAbGws5s+fL47VcubcyxeogoICTJs2DWvWrMEjjzyC1atX45JLLkH37t2DPjaRXBg8EflgMplgNpuxefNm7N69G4IguKTsqqqqsHnzZsyePRuPPfaYuN3Rq+RL165dAQAZGRkYMmSILO3t2rUrPvzww2YDbt33EQQBXbp0celBk6Kl6+J8rgceeAAPPPAAfvvtN/Tq1Qv//ve/sXr16oDOK9UPP/yAX3/9FWazGXfccYe4fdOmTS77nXPOOQAgzhRsyVNPPYW4uDj87W9/Q3JyMv7617/K0t5OnTrBbrfjt99+w/nnny9uLy8vR3V1NTp16uSy/549eyAIgkuA9OuvvwKAOCjfkVKsrq52mQjg3ovlyeuvv45zzjkH69evdzmHp7SwFL6Cw7S0NAwbNgxr1qzB6NGj8cUXX2DJkiVBnY9IbhzzROTDkCFDkJaWBovFAovFgn79+rmkJhw9N4IguDzOnw/7oUOHIiUlBfPmzXNJhzgcO3ZMcntHjBgBQRAwe/bsZvc52njLLbcgNjYWs2fPbtZuQRD8KrHQ0nU5c+YMrFary2O6du2K5ORklyn3R48ebZYOkpOn10cQBDz99NMu+7Vr1w4DBw7Eiy++iAMHDrjc536NgLNf/iUlJbj11ltRWFiIt956S5b2Xn/99QCav38WLVoE4OxsR2dHjhxxmYFXW1uLl156Cb169RJ7Mx1B+meffSbud/r0aZjN5hbb4+n6bdu2DVu3bvX3KXnkqL9VXV3t8f7bb78dP/30Ex588EHExsaioKAgqPMRyY09T0Q+xMfH45ZbbsHatWtx+vRpLFy40OX+lJQUDBw4EAsWLEBDQwPat2+PjRs3ijV7fElJScGzzz6L22+/HX369EFBQQHatWuHAwcO4N1338Xll1+OZ555RlJ7r776atx+++1YunQpfvvtNzF1+Pnnn+Pqq6/G5MmT0bVrV8ydOxczZszA/v37MXz4cCQnJ2Pfvn3YsGEDioqKMH369KCuy6+//orBgwdj5MiRuOCCCxAXF4cNGzagvLzc5YtwxowZMJvN2LdvnyLlC3r06IGuXbti+vTpOHz4MFJSUvDGG294HMS+dOlSXHHFFejTpw+KiorQpUsX7N+/H++++y6+++67ZvvHxMRg9erVGD58OEaOHIn33nvP6/g1f1188cUoLCxESUkJqqurMWjQIGzfvh1msxnDhw/H1Vdf7bL/eeedh7vuugtff/01MjMz8eKLL6K8vBwrV64U98nLy0PHjh1x1113icHIiy++KL7XfLnhhhuwfv163HzzzRg2bBj27duH5cuX44ILLnCp+i5V3759AQBTp07F0KFDmwVIw4YNQ3p6OtatW4frrrsOGRkZAZ+LSBEqzPAjCiubNm0SAAg6nU44ePBgs/sPHTok3HzzzUJqaqpgNBqF2267TThy5IgAQJg1a5a4n6ep4YIgCJ988okwdOhQwWg0CgaDQejataswduxY4ZtvvhH3KSwsFFq3bt3s3J6moTc2NgpPPfWU0KNHDyEhIUFo166dcN111wk7duxw2e+NN94QrrjiCqF169ZC69athR49egiTJk0Sfvnll6Cvy/Hjx4VJkyYJPXr0EFq3bi0YjUahf//+wmuvveayn6PEgPs18cVbqQJP10cQBOGnn34ShgwZIiQlJQlt27YV7r77buH7779vNn1eEARh165d4mtpMBiE7t27CzNnzhTvdy5V4HDmzBlh0KBBQlJSkvDVV195bbfj9f/66699Pr+GhgZh9uzZQpcuXYT4+HghNzdXmDFjhmC1Wl3269SpkzBs2DDhww8/FC666CJBr9cLPXr0ENatW9fsmDt27BD69+8vJCQkCB07dhQWLVrkV6kCu90uzJs3T+jUqZOg1+uF3r17C++8845QWFgodOrUSdzPUY7AU2kKT6UKGhsbhSlTpgjt2rUTdDqdx7IFf/vb3wQAwiuvvOLzehGpQScIHvqkiYhI0zp37oyePXvinXfeUbspipg2bRpeeOEFlJWVReSafxTeOOaJiIg0xWq1YvXq1RgxYgQDJ9IkjnkiIiJNqKiowEcffYTXX38dJ06cwL333qt2k4g8YvBERESa8NNPP2H06NHIyMjA0qVLm62dR6QVHPNEREREJAHHPBERERFJwOCJiIiI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\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.boxplot(x=\"key\", y=\"track_popularity\", data=data)\n",
        "plt.title(\"Track Popularity by Key\")\n",
        "plt.show()\n",
        "\n",
        "numerical_features = [\n",
        "    \"danceability\",\n",
        "    \"energy\",\n",
        "    \"speechiness\",\n",
        "    \"acousticness\",\n",
        "    \"instrumentalness\",\n",
        "    \"liveness\",\n",
        "    \"valence\",\n",
        "    \"tempo\",\n",
        "    \"duration_ms\",\n",
        "]\n",
        "\n",
        "for feature in numerical_features:\n",
        "    sns.boxplot(\n",
        "        x=feature,\n",
        "        y=\"track_popularity\",\n",
        "        data=data,\n",
        "    )\n",
        "    plt.title(f\"{feature} vs. Track Popularity\")\n",
        "    plt.xlabel(feature)\n",
        "    plt.ylabel(\"Track Popularity\")\n",
        "    plt.show()\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 558
        },
        "id": "wCiCj3ZdAZBe",
        "outputId": "bac07a1c-3145-4056-9bd7-1e51635073ea"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "corr = data[[\"danceability\", \"energy\", \"key\", \"loudness\", \"mode\", \"speechiness\", \"acousticness\", \"instrumentalness\", \"liveness\", \"valence\", \"tempo\", \"track_popularity\"]].corr()\n",
        "sns.heatmap(corr, annot=True)\n",
        "plt.title(\"Correlation Matrix\")\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "nJ89vwMc_Ph9",
        "outputId": "4d789df0-a8e6-4142-8d87-292cd6c46bbc"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Define the variable \"x\"\n",
        "x = \"track_popularity\"\n",
        "\n",
        "# Filter data for specific playlist_genres\n",
        "data_a = data[data[\"playlist_genre\"] == \"A\"]\n",
        "data_c = data[data[\"playlist_genre\"] == \"C\"]\n",
        "\n",
        "# Generate kernel density plots for each data subset\n",
        "sns.kdeplot(data_a[x], label=\"playlist_genre: A\")\n",
        "sns.kdeplot(data_c[x], label=\"playlist_genre: C\")\n",
        "\n",
        "# Add title and legend\n",
        "plt.title(\"Distribution of Track Popularity by playlist_genre\")\n",
        "plt.legend()\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n2oys97FCu1g",
        "outputId": "16059373-3769-4263-ba92-440029dce3f3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[66 67 70 ... 14 15 27]\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Read the CSV file\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "\n",
        "# Extract the track popularity column as a 1D array\n",
        "track_popularity_array = data['track_popularity'].to_numpy()\n",
        "\n",
        "# Print the 1D array\n",
        "print(track_popularity_array)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oVjBEWecDOl4"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.tree import DecisionTreeClassifier"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "A_vm4TlcDgZO"
      },
      "outputs": [],
      "source": [
        "from sklearn.feature_selection import RFECV"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PdkBvrs_JVm2",
        "outputId": "105ba2e0-e040-46f7-b46c-cf53d3500451"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Data successfully scaled, divided into features and target, and split into training and test sets.\n",
            "X_train shape: (26266, 11)\n",
            "y_train shape: (26266,)\n",
            "X_test shape: (6567, 11)\n",
            "y_test shape: (6567,)\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Read the csv file into a dataframe\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "\n",
        "# Define features and target variable\n",
        "features = ['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness',\n",
        "             'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo']\n",
        "target = 'track_popularity'\n",
        "\n",
        "# Feature scaling\n",
        "scaler = StandardScaler()\n",
        "scaled_data = scaler.fit_transform(data[features])\n",
        "\n",
        "# Separate features and target\n",
        "X = pd.DataFrame(scaled_data, columns=features)\n",
        "y = data[target]\n",
        "\n",
        "# Split data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "print(\"Data successfully scaled, divided into features and target, and split into training and test sets.\")\n",
        "print(f\"X_train shape: {X_train.shape}\")\n",
        "print(f\"y_train shape: {y_train.shape}\")\n",
        "print(f\"X_test shape: {X_test.shape}\")\n",
        "print(f\"y_test shape: {y_test.shape}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xmKxFawX_HPV",
        "outputId": "657a9033-4f60-4f26-f0cb-5f5fdfba15b0"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Logistic Regression (Multi-class): 0.08405664687071722\n",
            "K-Nearest Neighbors: 0.1044617024516522\n",
            "Support Vector Machines (One-vs-Rest): 0.14344449520328917\n",
            "Decision Trees: 0.21090299984772345\n",
            "Random Forests: 0.2492766864626161\n"
          ]
        }
      ],
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "\n",
        "# Import other necessary libraries\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.multiclass import OneVsRestClassifier\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "\n",
        "# Update models dictionary\n",
        "models = {\n",
        "    \"Logistic Regression (Multi-class)\": LogisticRegression(multi_class=\"multinomial\"),\n",
        "    \"K-Nearest Neighbors\": KNeighborsClassifier(),\n",
        "    \"Support Vector Machines (One-vs-Rest)\": OneVsRestClassifier(SVC()),\n",
        "    \"Decision Trees\": DecisionTreeClassifier(),\n",
        "    \"Random Forests\": RandomForestClassifier(),\n",
        "}\n",
        "\n",
        "# Fit and evaluate models\n",
        "for name, model in models.items():\n",
        "    model.fit(X_train, y_train)\n",
        "    print(f\"{name}: {model.score(X_test, y_test)}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Gme0KJONCkRC",
        "outputId": "bc231239-a4bf-4309-8eac-98d8c7a32e25"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Training Logistic Regression...\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Training K-Nearest Neighbors...\n",
            "Training Support Vector Machines...\n",
            "Training Decision Trees...\n",
            "Training Random Forests...\n",
            "Logistic Regression: Accuracy = 0.08405664687071722\n",
            "K-Nearest Neighbors: Accuracy = 0.1044617024516522\n",
            "Support Vector Machines: Accuracy = 0.0875590071569971\n",
            "Decision Trees: Accuracy = 0.20907568143749047\n",
            "Random Forests: Accuracy = 0.2485153037916857\n"
          ]
        }
      ],
      "source": [
        "# Import necessary libraries\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "\n",
        "# Initialize an empty dictionary to store models\n",
        "models = {}\n",
        "\n",
        "# Define classifiers and add them to the dictionary\n",
        "models[\"Logistic Regression\"] = LogisticRegression()\n",
        "models[\"K-Nearest Neighbors\"] = KNeighborsClassifier()\n",
        "models[\"Support Vector Machines\"] = SVC()\n",
        "models[\"Decision Trees\"] = DecisionTreeClassifier()\n",
        "models[\"Random Forests\"] = RandomForestClassifier()\n",
        "\n",
        "# Train each model on the training data\n",
        "for name, model in models.items():\n",
        "  print(f\"Training {name}...\")\n",
        "  model.fit(X_train, y_train)\n",
        "\n",
        "# Evaluate model performance on test data\n",
        "for name, model in models.items():\n",
        "  accuracy = model.score(X_test, y_test)\n",
        "  print(f\"{name}: Accuracy = {accuracy}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "E0tCLUR-_HNB",
        "outputId": "e546c716-5091-4d32-ff80-3578729ca48e"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n",
            "  warn(\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "# Load data\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "\n",
        "# Feature selection\n",
        "features = ['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness',\n",
        "            'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo']\n",
        "\n",
        "# Define target variable\n",
        "target = 'track_popularity'\n",
        "\n",
        "# Feature scaling\n",
        "scaler = StandardScaler()\n",
        "scaled_data = scaler.fit_transform(data[features])\n",
        "\n",
        "# Split data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(scaled_data, data[target], test_size=0.2)\n",
        "\n",
        "# Define parameter grid for GridSearchCV\n",
        "param_grid = {\n",
        "    'n_estimators': [100, 200, 500],\n",
        "    'max_depth': [5, 10, 20],\n",
        "    'min_samples_leaf': [1, 2, 5],\n",
        "    'max_features': ['auto', 'sqrt', 'log2']\n",
        "}\n",
        "\n",
        "# Create and fit GridSearchCV object\n",
        "grid_search = GridSearchCV(RandomForestRegressor(), param_grid)\n",
        "grid_search.fit(X_train, y_train)\n",
        "\n",
        "# Get best model and parameters\n",
        "best_model = grid_search.best_estimator_\n",
        "best_params = grid_search.best_params_\n",
        "\n",
        "# Predict on test set\n",
        "y_pred = best_model.predict(X_test)\n",
        "\n",
        "# Evaluate model performance\n",
        "mse = mean_squared_error(y_test, y_pred)\n",
        "rmse = np.sqrt(mse)\n",
        "print(f\"MSE: {mse:.2f}, RMSE: {rmse:.2f}\")\n",
        "\n",
        "# Print best parameters\n",
        "print(f\"Best parameters: {best_params}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uhhtQzJeDElM",
        "outputId": "9435c7ac-5dc3-4094-c3ea-ddf091c120f5"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=5.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Best hyperparameters: {'max_depth': 20, 'min_samples_leaf': 1}\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "\n",
        "# Load data\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "\n",
        "# Feature selection\n",
        "features = ['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness',\n",
        "            'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo']\n",
        "\n",
        "# Define target variable\n",
        "target = 'track_popularity'\n",
        "\n",
        "# Feature scaling\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "scaler = StandardScaler()\n",
        "scaled_data = scaler.fit_transform(data[features])\n",
        "\n",
        "# Split data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(scaled_data, data[target], test_size=0.2)\n",
        "\n",
        "# Define hyperparameter grid\n",
        "param_grid = {\n",
        "    'max_depth': [5, 10, 20],\n",
        "    'min_samples_leaf': [1, 2, 5]\n",
        "}\n",
        "\n",
        "# Create GridSearchCV object\n",
        "model = DecisionTreeClassifier()\n",
        "grid_search = GridSearchCV(model, param_grid, scoring='accuracy')\n",
        "\n",
        "# Fit the model\n",
        "grid_search.fit(X_train, y_train)\n",
        "\n",
        "# Get best model and parameters\n",
        "best_model = grid_search.best_estimator_\n",
        "best_params = grid_search.best_params_\n",
        "\n",
        "# Print best hyperparameters\n",
        "print(f\"Best hyperparameters: {best_params}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 425
        },
        "id": "4pSTaWwaCNrl",
        "outputId": "8d0ceb85-7e33-443e-ffb2-6ed8196fb970"
      },
      "outputs": [
        {
          "ename": "FileNotFoundError",
          "evalue": "ignored",
          "output_type": "error",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-809e907afd3c>\u001b[0m in \u001b[0;36m<cell line: 7>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Load data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'spotify_songs.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;31m# Feature selection\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m                     \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew_arg_name\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_arg_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mF\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    948\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    952\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    603\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    604\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 605\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    606\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1440\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1441\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1442\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1443\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1444\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1733\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1735\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1736\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1737\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    854\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    855\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 856\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    857\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    858\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'spotify_songs.csv'"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV, RandomizedSearchCV\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# Load data\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "\n",
        "# Feature selection\n",
        "features = ['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness',\n",
        "            'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo']\n",
        "\n",
        "# Define target variable\n",
        "target = 'track_popularity'\n",
        "\n",
        "# Feature scaling (optional)\n",
        "# from sklearn.preprocessing import StandardScaler\n",
        "# scaler = StandardScaler()\n",
        "# scaled_data = scaler.fit_transform(data[features])\n",
        "\n",
        "# Split data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(data[features], data[target], test_size=0.2)\n",
        "\n",
        "# **GridSearchCV**\n",
        "\n",
        "# Define hyperparameter grid\n",
        "param_grid = {\n",
        "    'max_depth': [5, 10, 20],\n",
        "    'min_samples_leaf': [1, 2, 5],\n",
        "    'criterion': ['gini', 'entropy']\n",
        "}\n",
        "\n",
        "# Create and fit GridSearchCV object\n",
        "model = DecisionTreeClassifier()\n",
        "grid_search = GridSearchCV(model, param_grid, scoring='accuracy')\n",
        "grid_search.fit(X_train, y_train)\n",
        "\n",
        "# Get best model and parameters\n",
        "best_model_grid = grid_search.best_estimator_\n",
        "best_params_grid = grid_search.best_params_\n",
        "\n",
        "# Evaluate best model\n",
        "y_pred_grid = best_model_grid.predict(X_test)\n",
        "accuracy_grid = accuracy_score(y_test, y_pred_grid)\n",
        "print(f\"\\nGridSearchCV:\")\n",
        "print(f\"Best parameters: {best_params_grid}\")\n",
        "print(f\"Accuracy on test set: {accuracy_grid:.4f}\")\n",
        "\n",
        "# **RandomizedSearchCV**\n",
        "\n",
        "# Define parameter distributions\n",
        "param_distributions = {\n",
        "    'max_depth': np.arange(5, 21),\n",
        "    'min_samples_leaf': np.arange(1, 6),\n",
        "    'criterion': ['gini', 'entropy']\n",
        "}\n",
        "\n",
        "# Create and fit RandomizedSearchCV object\n",
        "random_search = RandomizedSearchCV(model, param_distributions, n_iter=100, scoring='accuracy')\n",
        "random_search.fit(X_train, y_train)\n",
        "\n",
        "# Get best model and parameters\n",
        "best_model_random = random_search.best_estimator_\n",
        "best_params_random = random_search.best_params_\n",
        "\n",
        "# Evaluate best model\n",
        "y_pred_random = best_model_random.predict(X_test)\n",
        "accuracy_random = accuracy_score(y_test, y_pred_random)\n",
        "print(f\"\\nRandomizedSearchCV:\")\n",
        "print(f\"Best parameters: {best_params_random}\")\n",
        "print(f\"Accuracy on test set: {accuracy_random:.4f}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8NG0O_IvxViU",
        "outputId": "186d66b8-2466-4de9-b9a1-87322b2e401d"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Best score: -609.0803\n",
            "Best parameters: {'max_depth': 5, 'max_features': 'sqrt', 'min_samples_leaf': 1}\n",
            "Mean Squared Error: 582.0497\n"
          ]
        }
      ],
      "source": [
        "# Import libraries\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.tree import DecisionTreeRegressor\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Read data\n",
        "data = pd.read_csv(\"spotify_songs.csv\")\n",
        "\n",
        "# Define features and target\n",
        "features = [\n",
        "    \"danceability\",\n",
        "    \"energy\",\n",
        "    \"key\",\n",
        "    \"loudness\",\n",
        "    \"mode\",\n",
        "    \"speechiness\",\n",
        "    \"acousticness\",\n",
        "    \"instrumentalness\",\n",
        "    \"liveness\",\n",
        "    \"valence\",\n",
        "    \"tempo\",\n",
        "]\n",
        "target = \"track_popularity\"\n",
        "\n",
        "# Scale features\n",
        "scaler = StandardScaler()\n",
        "scaled_features = scaler.fit_transform(data[features])\n",
        "\n",
        "# Define parameter grid for GridSearchCV\n",
        "param_grid = {\n",
        "    \"max_depth\": [3, 5, 7],\n",
        "    \"min_samples_leaf\": [1, 3, 5],\n",
        "    \"max_features\": [\"auto\", \"sqrt\", \"log2\", None],\n",
        "}\n",
        "\n",
        "# Create and fit GridSearchCV\n",
        "model = DecisionTreeRegressor()\n",
        "grid_search = GridSearchCV(model, param_grid, scoring=\"neg_mean_squared_error\", cv=5)\n",
        "grid_search.fit(scaled_features, data[target])\n",
        "\n",
        "# Get best parameters and score\n",
        "best_estimator = grid_search.best_estimator_\n",
        "best_score = grid_search.best_score_\n",
        "best_params = grid_search.best_params_\n",
        "\n",
        "print(f\"Best score: {best_score:.4f}\")\n",
        "print(f\"Best parameters: {best_params}\")\n",
        "\n",
        "# Predict using best model\n",
        "predictions = best_estimator.predict(scaled_features)\n",
        "\n",
        "# Evaluate performance (replace with your own evaluation metrics)\n",
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "mse = mean_squared_error(data[target], predictions)\n",
        "print(f\"Mean Squared Error: {mse:.4f}\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "uIDDSWLlDWRj"
      },
      "outputs": [],
      "source": [
        "from sklearn.feature_selection import RFECV\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EGljR9fiDWPK",
        "outputId": "4faac4f0-e21c-47c6-db7d-38d686c67fd6"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "K-Fold Cross-Validation:\n",
            "Accuracy: 0.2116 +/- 0.0042\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "<ipython-input-42-8fac2d76c797>:37: DeprecationWarning: In future, it will be an error for 'np.bool_' scalars to be interpreted as an index\n",
            "  selected_features = [features[i] for i in rfecv.support_]\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "Selected Features:\n",
            "danceability: Rank 1\n",
            "energy: Rank 2\n",
            "key: Rank 3\n",
            "loudness: Rank 1\n",
            "mode: Rank 5\n",
            "speechiness: Rank 1\n",
            "acousticness: Rank 1\n",
            "instrumentalness: Rank 4\n",
            "liveness: Rank 1\n",
            "valence: Rank 1\n",
            "tempo: Rank 1\n",
            "\n",
            "Model Accuracy with selected features: 0.9758\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.model_selection import KFold, cross_val_score\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# Load data\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "\n",
        "# Feature selection\n",
        "features = ['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness',\n",
        "            'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo']\n",
        "\n",
        "# Define target variable\n",
        "target = 'track_popularity'\n",
        "\n",
        "# Feature scaling\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "scaler = StandardScaler()\n",
        "scaled_data = scaler.fit_transform(data[features])\n",
        "\n",
        "# K-Fold Cross-Validation\n",
        "kfold = KFold(n_splits=5, shuffle=True, random_state=42)\n",
        "\n",
        "# Define model\n",
        "model = DecisionTreeClassifier()\n",
        "\n",
        "# Cross-validation for accuracy\n",
        "scores = cross_val_score(model, scaled_data, data[target], cv=kfold, scoring='accuracy')\n",
        "print(f\"K-Fold Cross-Validation:\")\n",
        "print(f\"Accuracy: {scores.mean():.4f} +/- {scores.std():.4f}\")\n",
        "\n",
        "# Feature Selection with RFECV\n",
        "rfecv = RFECV(estimator=model, cv=kfold, scoring='accuracy')\n",
        "rfecv.fit(scaled_data, data[target])\n",
        "\n",
        "# Get selected features\n",
        "selected_features = [features[i] for i in rfecv.support_]\n",
        "\n",
        "# Get ranking of features\n",
        "feature_ranking = rfecv.ranking_\n",
        "\n",
        "# Print selected features and their ranking\n",
        "print(f\"\\nSelected Features:\")\n",
        "for feature, rank in zip(features, feature_ranking):\n",
        "    print(f\"{feature}: Rank {rank}\")\n",
        "\n",
        "# Evaluate model with selected features\n",
        "selected_data = scaled_data[:, rfecv.support_]\n",
        "y_pred = model.fit(selected_data, data[target]).predict(selected_data)\n",
        "accuracy = accuracy_score(data[target], y_pred)\n",
        "print(f\"\\nModel Accuracy with selected features: {accuracy:.4f}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "id": "EdEsOWCWDxjI",
        "outputId": "877aff30-1489-489f-b9b0-593cb3023013"
      },
      "outputs": [
        {
          "ename": "NameError",
          "evalue": "ignored",
          "output_type": "error",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-717b0b95124a>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate and print accuracy score\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0maccuracy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Accuracy Score: {accuracy:.4f}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'y' is not defined"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score\n",
        "\n",
        "# Calculate and print accuracy score\n",
        "accuracy = accuracy_score(y, y_pred)\n",
        "print(f\"Accuracy Score: {accuracy:.4f}\")\n",
        "\n",
        "# Calculate and print precision score\n",
        "precision = precision_score(y, y_pred, average='macro')\n",
        "print(f\"Precision Score: {precision:.4f}\")\n",
        "\n",
        "# Calculate and print recall score\n",
        "recall = recall_score(y, y_pred, average='macro')\n",
        "print(f\"Recall Score: {recall:.4f}\")\n",
        "\n",
        "# Calculate and print F1 score\n",
        "f1 = f1_score(y, y_pred, average='macro')\n",
        "print(f\"F1 Score: {f1:.4f}\")\n",
        "\n",
        "# Calculate and print ROC AUC score (if applicable)\n",
        "if target in ['binary', 'multiclass']:\n",
        "    roc_auc = roc_auc_score(y, y_pred)\n",
        "    print(f\"ROC AUC Score: {roc_auc:.4f}\")\n",
        "else:\n",
        "    print(\"ROC AUC Score is not applicable for this target variable.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JX8pRiG3DxpP"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "N9llP3sxDxq3"
      },
      "outputs": [],
      "source": [
        "# Calculate confusion matrix\n",
        "cm = confusion_matrix(y, y_pred)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "id": "z6EcR47TDxuh",
        "outputId": "cc56c30e-b45b-4d0c-9ffe-9e6e8ffdc349"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Define labels for each class\n",
        "class_names = data[target].unique()\n",
        "\n",
        "# Plot confusion matrix\n",
        "plt.figure(figsize=(8, 6))\n",
        "ax = plt.gca()\n",
        "sns.heatmap(cm, annot=True, cmap='Blues', fmt='d', ax=ax)\n",
        "ax.set_title('Confusion Matrix')\n",
        "ax.set_xlabel('Predicted Label')\n",
        "ax.set_ylabel('True Label')\n",
        "plt.xticks(range(len(class_names)), class_names, rotation=45)\n",
        "plt.yticks(range(len(class_names)), class_names)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m0GO2X3KRNe1",
        "outputId": "6b7c2a49-6eed-4ad4-9f5c-6f7e2db74d20"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Model saved successfully to: spotify_song_popularity_model.pkl\n"
          ]
        }
      ],
      "source": [
        "# Import joblib\n",
        "import joblib\n",
        "\n",
        "# Save the model\n",
        "model = \"spotify_song_popularity_model.pkl\"\n",
        "joblib.dump(model, model)\n",
        "\n",
        "# Print confirmation message\n",
        "print(f\"Model saved successfully to: {model}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "v_0s3HTyRNme"
      },
      "outputs": [],
      "source": [
        "import json\n",
        "\n",
        "# Save the selected features directly as a list\n",
        "with open(\"selected_features.json\", \"w\") as f:\n",
        "    json.dump(selected_features, f)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "30ZPq8nd0Mrh",
        "outputId": "c5584dbb-1a19-44f6-9d50-2bb97b57ea2e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Collecting streamlit\n",
            "  Downloading streamlit-1.29.0-py2.py3-none-any.whl (8.4 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.4/8.4 MB\u001b[0m \u001b[31m29.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n",
            "Requirement already satisfied: blinker<2,>=1.0.0 in /usr/lib/python3/dist-packages (from streamlit) (1.4)\n",
            "Requirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.3.2)\n",
            "Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\n",
            "Requirement already satisfied: importlib-metadata<7,>=1.4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.8.0)\n",
            "Requirement already satisfied: numpy<2,>=1.19.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.26.2)\n",
            "Requirement already satisfied: packaging<24,>=16.8 in /usr/local/lib/python3.10/dist-packages (from streamlit) (23.2)\n",
            "Requirement already satisfied: pandas<3,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.5.3)\n",
            "Requirement already satisfied: pillow<11,>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.4.0)\n",
            "Requirement already satisfied: protobuf<5,>=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n",
            "Requirement already satisfied: pyarrow>=6.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.0.0)\n",
            "Requirement already satisfied: python-dateutil<3,>=2.7.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.8.2)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.31.0)\n",
            "Requirement already satisfied: rich<14,>=10.14.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.7.0)\n",
            "Requirement already satisfied: tenacity<9,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.2.3)\n",
            "Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.5.0)\n",
            "Requirement already satisfied: tzlocal<6,>=1.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.2)\n",
            "Collecting validators<1,>=0.2 (from streamlit)\n",
            "  Downloading validators-0.22.0-py3-none-any.whl (26 kB)\n",
            "Collecting gitpython!=3.1.19,<4,>=3.0.7 (from streamlit)\n",
            "  Downloading GitPython-3.1.40-py3-none-any.whl (190 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m190.6/190.6 kB\u001b[0m \u001b[31m19.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting pydeck<1,>=0.8.0b4 (from streamlit)\n",
            "  Downloading pydeck-0.8.1b0-py2.py3-none-any.whl (4.8 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.8/4.8 MB\u001b[0m \u001b[31m72.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.2)\n",
            "Collecting watchdog>=2.1.5 (from streamlit)\n",
            "  Downloading watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl (82 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m82.1/82.1 kB\u001b[0m \u001b[31m8.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.4)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (3.1.2)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (4.19.2)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.12.0)\n",
            "Collecting gitdb<5,>=4.0.1 (from gitpython!=3.1.19,<4,>=3.0.7->streamlit)\n",
            "  Downloading gitdb-4.0.11-py3-none-any.whl (62 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.7/62.7 kB\u001b[0m \u001b[31m7.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata<7,>=1.4->streamlit) (3.17.0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2023.3.post1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3,>=2.7.3->streamlit) (1.16.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.6)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2023.11.17)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (2.16.1)\n",
            "Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit)\n",
            "  Downloading smmap-5.0.1-py3-none-any.whl (24 kB)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.3)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (23.1.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.11.2)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.31.1)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.13.2)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n",
            "Installing collected packages: watchdog, validators, smmap, pydeck, gitdb, gitpython, streamlit\n",
            "Successfully installed gitdb-4.0.11 gitpython-3.1.40 pydeck-0.8.1b0 smmap-5.0.1 streamlit-1.29.0 validators-0.22.0 watchdog-3.0.0\n"
          ]
        }
      ],
      "source": [
        "!pip install streamlit"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9DTbwNKEDWce",
        "outputId": "956f05ee-cea3-4d0a-9785-a26d53daf6ea"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "2023-12-08 19:04:36.439 \n",
            "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
            "  command:\n",
            "\n",
            "    streamlit run /usr/local/lib/python3.10/dist-packages/colab_kernel_launcher.py [ARGUMENTS]\n"
          ]
        }
      ],
      "source": [
        "import streamlit as st\n",
        "import pandas as pd\n",
        "import joblib\n",
        "\n",
        "# Load model\n",
        "model = joblib.load(\"spotify_song_popularity_model.pkl\")\n",
        "\n",
        "# Define features\n",
        "features = [\"danceability\", \"energy\", \"key\", \"loudness\", \"mode\",\n",
        "            \"speechiness\", \"acousticness\", \"instrumentalness\", \"liveness\",\n",
        "            \"valence\", \"tempo\"]\n",
        "\n",
        "def predict_popularity(data):\n",
        "    # Preprocess data\n",
        "    data = pd.DataFrame(data, index=[0])\n",
        "\n",
        "    # Predict popularity\n",
        "    prediction = model.predict(data[features])[0]\n",
        "\n",
        "    # Return prediction\n",
        "    return prediction\n",
        "\n",
        "# App layout\n",
        "st.title(\"Song Popularity Prediction\")\n",
        "\n",
        "# User input fields\n",
        "danceability = st.slider(\"Danceability\", 0.0, 1.0, 0.5)\n",
        "energy = st.slider(\"Energy\", 0.0, 1.0, 0.5)\n",
        "key = st.selectbox(\"Key\", range(12))\n",
        "loudness = st.slider(\"Loudness\", -60.0, 0.0, -30.0)\n",
        "mode = st.radio(\"Mode\", (\"Major\", \"Minor\"))\n",
        "\n",
        "speechiness = st.slider(\"Speechiness\", 0.0, 1.0, 0.5)\n",
        "acousticness = st.slider(\"Acousticness\", 0.0, 1.0, 0.5)\n",
        "instrumentalness = st.slider(\"Instrumentalness\", 0.0, 1.0, 0.5)\n",
        "liveness = st.slider(\"Liveness\", 0.0, 1.0, 0.5)\n",
        "\n",
        "valence = st.slider(\"Valence\", 0.0, 1.0, 0.5)\n",
        "tempo = st.slider(\"Tempo\", 0.0, 250.0, 120.0)\n",
        "\n",
        "# Model prediction button\n",
        "if st.button(\"Predict Song Popularity\"):\n",
        "    user_input = {\n",
        "        \"danceability\": danceability,\n",
        "        \"energy\": energy,\n",
        "        \"key\": key,\n",
        "        \"loudness\": loudness,\n",
        "        \"mode\": mode,\n",
        "        \"speechiness\": speechiness,\n",
        "        \"acousticness\": acousticness,\n",
        "        \"instrumentalness\": instrumentalness,\n",
        "        \"liveness\": liveness,\n",
        "        \"valence\": valence,\n",
        "        \"tempo\": tempo,\n",
        "    }\n",
        "\n",
        "    predicted_popularity = predict_popularity(user_input)\n",
        "\n",
        "    st.success(f\"Predicted Popularity: {predicted_popularity:.4f}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Dt0EV1w-6Utd",
        "outputId": "c7e57b64-ba28-49e7-cec3-60b1b83e2cd3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Data successfully scaled, divided into features and target, and split into training and test sets.\n",
            "X_train shape: (26266, 11)\n",
            "y_train shape: (26266,)\n",
            "X_test shape: (6567, 11)\n",
            "y_test shape: (6567,)\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Read the csv file into a dataframe\n",
        "data = pd.read_csv('spotify_songs.csv')\n",
        "\n",
        "# Define features and target variable\n",
        "features = ['danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness',\n",
        "             'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo']\n",
        "target = 'track_popularity'\n",
        "\n",
        "# Feature scaling\n",
        "scaler = StandardScaler()\n",
        "scaled_data = scaler.fit_transform(data[features])\n",
        "\n",
        "# Separate features and target\n",
        "X = pd.DataFrame(scaled_data, columns=features)\n",
        "y = data[target]\n",
        "\n",
        "# Split data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "print(\"Data successfully scaled, divided into features and target, and split into training and test sets.\")\n",
        "print(f\"X_train shape: {X_train.shape}\")\n",
        "print(f\"y_train shape: {y_train.shape}\")\n",
        "print(f\"X_test shape: {X_test.shape}\")\n",
        "print(f\"y_test shape: {y_test.shape}\")\n"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPRkw3VFzRBT9A6CJJdxCEx",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}